<Keyword, region> <Identifier, DataManagement> <Lcur, {> <Keyword, function> <Identifier, allocate> <Lpar, (> <Identifier, size> <Rpar, )> <Lcur, {> <Keyword, let> <Identifier, buffer> <Operator, => <Identifier, allocateMemory> <Lpar, (> <Identifier, size> <Rpar, )> <Semi, ;> <Keyword, return> <Identifier, buffer> <Semi, ;> <Rcur, }> <Keyword, function> <Identifier, free> <Lpar, (> <Identifier, ptr> <Rpar, )> <Lcur, {> <Identifier, freeMemory> <Lpar, (> <Identifier, ptr> <Rpar, )> <Semi, ;> <Keyword, return> <Number, 0> <Semi, ;> <Rcur, }> <Keyword, function> <Identifier, borrow> <Lpar, (> <Identifier, ptr> <Rpar, )> <Lcur, {> <Keyword, if> <Identifier, isMemoryFreed> <Lpar, (> <Identifier, ptr> <Rpar, )> <Lcur, {> <Keyword, return> <Number, -1> <Semi, ;> <Rcur, }> <Keyword, return> <Identifier, ptr> <Semi, ;> <Rcur, }> <Keyword, function> <Identifier, processStream> <Lpar, (> <Identifier, streamSize> <Comma, ,> <Identifier, blocksize> <Rpar, )> <Lcur, {> <Keyword, let> <Identifier, streamPtr> <Operator, => <Identifier, allocate> <Lpar, (> <Identifier, streamSize> <Rpar, )> <Semi, ;> <Keyword, let> <Identifier, blocks> <Operator, => <Lbrack, [> <Rbrack, ]> <Semi, ;> <Keyword, for> <Lpar, (> <Keyword, let> <Identifier, i> <Operator, => <Number, 0> <Semi, ;> <Identifier, i> <Operator, <> <Identifier, streamSize> <Semi, ;> <Identifier, i> <Operator, => <Identifier, i> <Operator, +> <Identifier, blockSize> <Rpar, )> <Lcur, {> <Keyword, let> <Identifier, blockPtr> <Operator, => <Identifier, borrow> <Lpar, (> <Identifier, streamPtr> <Operator, +> <Identifier, i> <Rpar, )> <Semi, ;> <Identifier, blocks> <Dot, .> <Identifier, push> <Lpar, (> <Identifier, blockPtr> <Rpar, )> <Semi, ;> <Rcur, }> <Keyword, return> <Identifier, blocks> <Semi, ;> <Rcur, }> <Rcur, }>